#!/usr/bin/env php
<?php
/**
 * 入口程序
 *
 * @author Yametei
 * @version $Id: shell 520 2012-04-08 08:03:18Z yametei $
 */

define('DESIRE_SAPI', 'wm');

$_directories = array(
	dirname(__FILE__) . '/configs/local/configuration.php',// local first
	dirname(__FILE__) . '/configs/configuration.php',
);

foreach ($_directories as $_file) {
	if (is_file($_file)) {
		require_once $_file;
		break;
	}
}
unset($_directories, $_file);

if (!class_exists('Desire_Version')) {//check framework has already loaded
	trigger_error("The desire framework not loaded correctly", E_USER_ERROR);
}

$worker = new Tattoo_Worker();
$worker->onWorkerStart = function($task)
{
	 $connection_to_baidu = new Tattoo_Worker_Connection_AsyncTcp('tcp://www.baidu.com:80');
    // 当连接建立成功时，发送http请求数据
    $connection_to_baidu->onConnect = function($connection_to_baidu)
    {
        echo "connect success\n";
        $connection_to_baidu->send("GET / HTTP/1.1\r\nHost: www.baidu.com\r\nConnection: keep-alive\r\n\r\n");
    };
    $connection_to_baidu->onMessage = function($connection_to_baidu, $http_buffer)
    {
        echo $http_buffer;
    };
    $connection_to_baidu->onClose = function($connection_to_baidu)
    {
        echo "connection closed\n";
    };
    $connection_to_baidu->onError = function($connection_to_baidu, $code, $msg)
    {
        echo "Error code:$code msg:$msg\n";
    };
    $connection_to_baidu->connect();
};

//print_r([$worker, $worker2, $worker3]);
Tattoo_Worker::run();
/*
require_once 'workerman/Autoloader.php';
use Workerman\Worker;

// #### http worker ####
$http_worker = new Worker("http://0.0.0.0:2345");

// 4 processes
$http_worker->count = 4;

// Emitted when data received
$http_worker->onMessage = function($connection, $data)
{
	Desire_Application::run();
	$connection->send(json_encode([
		$_REQUEST,
		$_POST,
		//Dzi_Service::region()->getById(mt_rand(1, 21)),
		time()
	]));
};

// run all workers
Worker::runAll();*/
