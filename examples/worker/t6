#!/usr/bin/env php
<?php
/**
 * 入口程序
 *
 * @author Yametei
 * @version $Id: shell 520 2012-04-08 08:03:18Z yametei $
 */

define('DESIRE_SAPI', 'wm');

$_directories = array(
	dirname(__FILE__) . '/configs/local/configuration.php',// local first
	dirname(__FILE__) . '/configs/configuration.php',
);

foreach ($_directories as $_file) {
	if (is_file($_file)) {
		require_once $_file;
		break;
	}
}
unset($_directories, $_file);

if (!class_exists('Desire_Version')) {//check framework has already loaded
	trigger_error("The desire framework not loaded correctly", E_USER_ERROR);
}

$worker = new Tattoo_Worker('text://0.0.0.0:2020');
// 进程启动时设置一个定时器，定时向所有客户端连接发送数据
$worker->onWorkerStart = function($worker)
{
    // 定时，每10秒一次
    Tattoo_Worker_Timer::add(10, function()use($worker)
    {
        // 遍历当前进程所有的客户端连接，发送当前服务器的时间
        foreach($worker->connections as $connection)
        {
            $connection->send(Desire_Time::format());
        }
    });
};
//print_r([$worker, $worker2, $worker3]);
Tattoo_Worker::run();
/*
require_once 'workerman/Autoloader.php';
use Workerman\Worker;

// #### http worker ####
$http_worker = new Worker("http://0.0.0.0:2345");

// 4 processes
$http_worker->count = 4;

// Emitted when data received
$http_worker->onMessage = function($connection, $data)
{
	Desire_Application::run();
	$connection->send(json_encode([
		$_REQUEST,
		$_POST,
		//Dzi_Service::region()->getById(mt_rand(1, 21)),
		time()
	]));
};

// run all workers
Worker::runAll();*/
